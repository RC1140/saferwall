#
# Default values for Saferwall malware sandbox.
# https://github.com/saferwall/saferwall
#

## Deploy environment label, e.g. baremetal, aws
##
global:
  deployEnv: aws

########### MINIO ###########
minio:
  enabled: true

  # We choose distributed for HA. This can be set to standalone in dev env.
  mode: standalone
  # mode: distributed

  # Number of nodes (applicable only for MinIO distributed mode)
  # Should be a minimum value of 4.
  # replicas: 1

  service:
    type: ClusterIP
    port: 9000

  persistence:
    # Use persistent volume to store data
    enabled: true

    # Size of persistent volume claim
    size: 5Gi

  accessKey: "<accessKey>"
  secretKey: "<secretKey>"
  spacename: samples
  avatarspace: images

####### FILEBEAT #########
filebeat:
  enabled: true
  filebeatConfig:
    filebeat.yml: |-
      filebeat.autodiscover:
        providers:
          - type: kubernetes
            in_cluster: true
            templates:
              - condition:
                  or:
                    - equals:
                        kubernetes.container.name: backend
                    - equals:
                        kubernetes.container.name: consumer
                config:
                  - type: docker
                    containers.ids:
                      - "${data.kubernetes.container.id}"
                    json.add_error_key: true
                    processors:
                      - add_kubernetes_metadata: ~
      processors:
        - add_cloud_metadata: ~
        - add_docker_metadata: ~ 
      output.elasticsearch:
        host: '${NODE_NAME}'
        hosts: '${ELASTICSEARCH_HOSTS:elasticsearch-master:9200}'

####### ELASTIC SEARCH #########
elasticsearch:
  enabled: true
  # replicas: 1
  # minimumMasterNodes: 1
  tolerations:
    - key: node-role.kubernetes.io/master
      effect: NoSchedule

####### KIBANA #########
kibana:
  enabled: true

####### COUCHBASE #########
couchbase-cluster:
  enabled: false
  couchbaseCluster:
    create: false
    authSecretOverride: "cb-admin-secret"
    baseImage: "couchbase/server"
    version: "enterprise-6.0.1"
    exposeAdminConsole: true
    adminConsoleServices:
      - data
    exposedFeatures: []
    cluster:
      dataServiceMemoryQuota: 512
      indexServiceMemoryQuota: 512
      searchServiceMemoryQuota: 512
      eventingServiceMemoryQuota: 512
      analyticsServiceMemoryQuota: 1024
      indexStorageSetting: memory_optimized
      autoFailoverTimeout: 120
      autoFailoverMaxCount: 3
      autoFailoverOnDataDiskIssues: true
      autoFailoverOnDataDiskIssuesTimePeriod: 120
      autoFailoverServerGroup: false
      logRetentionTime: 604800s
      logRetentionCount: 20
    buckets:
      files:
        name: files
        type: couchbase
        memoryQuota: 128
        replicas: 1
        ioPriority: high
        evictionPolicy: fullEviction
        conflictResolution: seqno
        enableFlush: true
        enableIndexReplica: false
      users:
        name: users
        type: couchbase
        memoryQuota: 128
        replicas: 1
        ioPriority: high
        evictionPolicy: fullEviction
        conflictResolution: seqno
        enableFlush: true
        enableIndexReplica: false
    servers:
      all_services:
        size: 3
        services:
          - data
          - index
          - query
          - search
          - eventing
          - analytics
        serverGroups: []
        pod:
          volumeMounts:
            default: couchbase
            data:  couchbase
    securityContext:
      fsGroup: 1000
    volumeClaimTemplates:
      - metadata:
          name: couchbase
        spec:
          storageClassName: default
          resources:
            requests:
              storage: 2Gi

########### NSQ ###########
nsq:
  nsqd:
    name: nsqd
    replicaCount: 2
  nsqlookupd:
    name: nsqlookupd
    replicaCount: 2

########### EFS-PROVISONNER ###########
efs-provisioner:
  efsProvisioner:
    efsFileSystemId: "fs-19eb0599"
    awsRegion: "us-east-1"
    provisionerName: "saferwall.com/aws-efs"
    # dnsName: "fs-36d586b7.efs.us-east-1.amazonaws.com"
    # storageClass:
    #   name:  {{ include "saferwall.fullname" . }}-efs

########### NGINX INGRESS  #############
nginx-ingress:
  enabled: true
  controller:
    config:
      use-proxy-protocol: "true"
      use-forwarded-headers: "true"
      compute-full-forwarded-for: "true"
    headers:
      X-GeoIP-Country: "$geoip_country_code"
      X-GeoIP-Region-Name: "$geoip_region_name"
      X-GeoIP-City: "$geoip_city"
      X-GeoIP-Postal-Code: "$geoip_postal_code"
    service:
      externalTrafficPolicy: "Local"
      annotations:
        service.beta.kubernetes.io/aws-load-balancer-proxy-protocol: '*'

########### BACKEND ###########
backend:
  enabled: true
  name: backend
  replicaCount: 1
  containerPort: 8080
  image:
    repository: saferwall/backend
    tag: latest
    pullPolicy: Never
  service:
    type: ClusterIP
    port: 80
    targetPort: 8080

########### FRONTEND ###########
frontend:
  enabled: true
  name: frontend
  replicaCount: 1
  containerPort: 80
  image:
    repository: saferwall/ui
    tag: latest
    pullPolicy: Never
  service:
    type: ClusterIP
    port: 80
    targetPort: 80

########### WEBSITE ###########
website:
  enabled: true
  name: website
  replicaCount: 1
  containerPort: 4000
  image:
    repository: saferwall/website
    tag: latest
    pullPolicy: Never
  service:
    type: ClusterIP
    port: 80
    targetPort: 4000

########## CERT-MANAGER ############
cert-manager:
  enabled: true
  ingressShim:
    defaultIssuerName: letsencrypt-prod
    defaultIssuerKind: ClusterIssuer
certEmail: admin@saferwall.com
backendDomainName: dev.api.saferwall.com
frontendDomainName: dev.saferwall.com
websiteDomainName: about.saferwall.com
backendHostname: https://dev.api.saferwall.com

########### CONSUMER ###########
consumer:
  enabled: true
  name: consumer
  replicaCount: 1
  image:
    repository: saferwall/consumer
    tag: latest
    pullPolicy: Never

########### MULTIAV ###########
multiav:
  enabled: true
  name: multiav
  vendors:
    avast:
      enabled: true
      replicaCount: 1
      containerPort: 50051
      image:
        repository: saferwall/goavast
        tag: latest
        pullPolicy: Always
      service:
        port: 50051
        targetPort: 50051
    avira:
      enabled: true
      replicaCount: 1
      containerPort: 50051
      image:
        repository: saferwall/goavira
        tag: latest
        pullPolicy: Always
      service:
        port: 50051
        targetPort: 50051
    bitdefender:
      enabled: true
      replicaCount: 1
      containerPort: 50051
      image:
        repository: saferwall/gobitdefender
        tag: latest
        pullPolicy: Always
      service:
        port: 50051
        targetPort: 50051
    clamav:
      enabled: true
      replicaCount: 1
      containerPort: 50051
      image:
        repository: saferwall/goclamav
        tag: latest
        pullPolicy: Always
      service:
        port: 50051
        targetPort: 50051
    comodo:
      enabled: true
      replicaCount: 1
      containerPort: 50051
      image:
        repository: saferwall/gocomodo
        tag: latest
        pullPolicy: Always
      service:
        port: 50051
        targetPort: 50051
    eset:
      enabled: true
      replicaCount: 1
      containerPort: 50051
      image:
        repository: saferwall/goeset
        tag: latest
        pullPolicy: Always
      service:
        port: 50051
        targetPort: 50051
    fsecure:
      enabled: true
      replicaCount: 1
      containerPort: 50051
      image:
        repository: saferwall/gofsecure
        tag: latest
        pullPolicy: Always
      service:
        port: 50051
        targetPort: 50051
    kaspersky:
      enabled: true
      replicaCount: 1
      containerPort: 50051
      image:
        repository: saferwall/gokaspersky
        tag: latest
        pullPolicy: Always
      service:
        port: 50051
        targetPort: 50051
    mcafee:
      enabled: true
      replicaCount: 1
      containerPort: 50051
      image:
        repository: saferwall/gomcafee
        tag: latest
        pullPolicy: Always
      service:
        port: 50051
        targetPort: 50051
    sophos:
      enabled: true
      replicaCount: 1
      containerPort: 50051
      image:
        repository: saferwall/gosophos
        tag: latest
        pullPolicy: Always
      service:
        port: 50051
        targetPort: 50051
    symantec:
      enabled: true
      replicaCount: 1
      containerPort: 50051
      image:
        repository: saferwall/gosymantec
        tag: latest
        pullPolicy: Always
      service:
        port: 50051
        targetPort: 50051
    windefender:
      enabled: true
      replicaCount: 1
      containerPort: 50051
      image:
        repository: saferwall/gowindefender
        tag: latest
        pullPolicy: Always
      service:
        port: 50051
        targetPort: 50051
  resources:
    requests:
      memory: 50Mi
      cpu: 50m
    limits:
      memory: 100Mi
      cpu: 100m
